# Customise this file, documentation can be found here:
# https://github.com/KrauseFx/fastlane/tree/master/docs
# All available actions: https://github.com/KrauseFx/fastlane/blob/master/docs/Actions.md
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# By default, fastlane will send which actions are used
# No personal data is shared, more information on https://github.com/fastlane/enhancer
# Uncomment the following line to opt out
# opt_out_usage

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "1.49.0"

default_platform :ios


platform :ios do
  before_all do
    ENV["SLACK_URL"] = "https://hooks.slack.com/services/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"
    cocoapods
    
    # increment_build_number

    # xctool # run the tests of your app
  end

  desc "Runs all the tests"
  lane :runtest do
    scan(
    	workspace:"PIXNET-iOS-SDK.xcworkspace",
    	scheme:"PIXNET-iOS-SDK",
    	device:"iPhone 6s Plus",
    	output_types:"html",
    	clean:true
    	)
  end

  desc "push to cocoapods trunk"
  lane :podspec do

    runtest
    #podspecPath = File.join(`echo $HOME/Dropbox/pixnet-ios-sdk/PIXNET-iOS-SDK`, "PIXNET-iOS-SDK.podspec")
    podspecPath =  "/Users/DolphinSu/Dropbox/pixnet-ios-sdk/PIXNET-iOS-SDK/PIXNET-iOS-SDK.podspec"
    version = version_bump_podspec(path: String.new("#{podspecPath}"), bump_type: "patch")# major, minor, patch

    say "new version: #{version}"
    git_commit(
      path: String.new("#{podspecPath}"),
      message: "update podspec(from jenkins)"
    )
    add_git_tag(
      tag: String.new("#{version}"),
    )
    sh("git remote set-url --push origin git@github.com:pixnet/pixnet-ios-sdk.git")# set remote to github
    push_to_git_remote(
      remote: 'origin',         # optional, default: 'origin'
      local_branch: 'HEAD',  # optional, aliased by 'branch', default: 'master'
      remote_branch: 'master', # optional, default is set to local_branch
      force: true,              # optional, default: false
    )
    # pod_push(path: String.new("#{podspecPath}"))
    sh(String.new("pod trunk push #{podspecPath} --allow-warnings"))
    if ENV["SLACK_URL"]
      slack(
        message:"pixnet-ios-sdk build success!",
        success:true,
        attachment_properties:{
          fields:[{
            title: "New Version:",
            value: String.new("#{version}"),
            short: true
          }]
        },
        default_payloads:[]
      )
    end
  end

  desc "Submit a new Beta Build to Apple TestFlight"
  desc "This will also make sure the profile is up to date"
  lane :beta do
    # sigh
    gym(scheme: "PIXNET-iOS-SDK") # Build your app - more options available
    pilot

    # sh "your_script.sh"
    # You can also use other beta testing services here
  end

  desc "Deploy a new version to the App Store"
  lane :deploy do
    # snapshot
    # sigh
    gym(scheme: "PIXNET-iOS-SDK") # Build your app - more options available
    # deliver(force: true)
    # frameit
  end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful
    
    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    if ENV["SLACK_URL"]
      slack(
        message:"pixnet-ios-sdk build failure.",
        success:false,
        attachment_properties:{
          fields:[{
            title: "exception",
            value: String.new("#{exception}"),
            short: false
          },{
              title: "see detail info.",
              value: "jenkins console <http://jenkins.cocoa.pixnet:8080/job/pixnet-ios-sdk/lastBuild/console|click here>",
              short: false
          }]
        },
        default_payloads:[]
      )
    end
  end
end



# More information about multiple platforms in fastlane: https://github.com/KrauseFx/fastlane/blob/master/docs/Platforms.md
# All available actions: https://github.com/KrauseFx/fastlane/blob/master/docs/Actions.md
